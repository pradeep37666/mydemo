{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","margin","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","Recipe","props","classes","useState","expanded","setExpanded","Card","className","CardHeader","title","subheader","calories","toFixed","CardMedia","image","CardActions","disableSpacing","Typography","IconButton","clsx","onClick","aria-expanded","aria-label","Collapse","in","timeout","unmountOnExit","CardContent","ingredients","map","ind","paragraph","text","weight","padding","display","alignItems","width","input","spacing","flex","iconButton","divider","App","recepi","setRecepi","search","setSearch","query","setQuery","useEffect","getRecepiData","a","axios","get","response","console","log","data","hits","Paper","onSubmit","e","preventDefault","component","InputBase","type","onChange","target","value","placeholder","inputProps","Grid","container","recipe","item","xs","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0XAqBMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,IACVC,OAAO,YAGTC,MAAO,CACLC,OAAQ,EACRC,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYV,EAAMW,YAAYC,OAAO,YAAa,CAChDC,SAAUb,EAAMW,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,CACNC,gBAAiBC,IAAI,UA8DVC,EA1DA,SAACC,GACd,IAAMC,EAAUvB,IADQ,EAEQwB,oBAAS,GAFjB,mBAEjBC,EAFiB,KAEPC,EAFO,KAQxB,OACE,8BACE,eAACC,EAAA,EAAD,CAAMC,UAAWL,EAAQpB,KAAzB,UACE,cAAC0B,EAAA,EAAD,CAAYC,MAAOR,EAAMQ,MAAOC,UAAW,QAAQT,EAAMU,SAASC,QAAQ,KAC1E,cAACC,EAAA,EAAD,CACEN,UAAWL,EAAQjB,MACnB6B,MAAOb,EAAMa,MACbL,MAAOR,EAAMQ,QAGf,eAACM,EAAA,EAAD,CAAaC,gBAAc,EAA3B,UAOE,cAACC,EAAA,EAAD,0BACA,cAACC,EAAA,EAAD,CACEX,UAAWY,YAAKjB,EAAQd,OAAT,eACZc,EAAQN,WAAaQ,IAExBgB,QA1BgB,WACxBf,GAAaD,IA0BLiB,gBAAejB,EACfkB,aAAW,YANb,SAOE,cAAC,IAAD,SAGJ,cAACC,EAAA,EAAD,CAAUC,GAAIpB,EAAUqB,QAAQ,OAAOC,eAAa,EAApD,SACE,cAACC,EAAA,EAAD,UACG1B,EAAM2B,YAAYC,KAAI,SAACC,GAAD,OACrB,cAACb,EAAA,EAAD,CAAYc,WAAS,EAArB,SACE,6BAAKD,EAAIE,QADgBF,EAAIG,qB,2CCrEvCtD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJoD,QAAS,UACTC,QAAS,OACTC,WAAY,SACZC,MAAO,IACPrD,OAAQ,aAEVsD,MAAO,CACLhD,WAAYT,EAAM0D,QAAQ,GAC1BC,KAAM,GAERC,WAAY,CACVP,QAAS,IAEXQ,QAAS,CACPxD,OAAQ,GACRF,OAAQ,OAwEG2D,MApEf,WACE,IAAMzC,EAAUvB,IADH,EAKewB,mBAAS,IALxB,mBAKNyC,EALM,KAKEC,EALF,OAMe1C,mBAAS,IANxB,mBAMN2C,EANM,KAMEC,EANF,OAQa5C,mBAAS,UARtB,mBAQN6C,EARM,KAQCC,EARD,KAUbC,qBAAU,WACRC,MACC,CAACH,IAEJ,IAAMG,EAAa,uCAAG,4BAAAC,EAAA,sEACGC,IAAMC,IAAN,0CACcN,EADd,mBAbV,WAaU,oBAZT,mCAYS,uDADH,OACdO,EADc,OAIpBC,QAAQC,IAAIF,EAASG,KAAKC,MAC1Bd,EAAUU,EAASG,KAAKC,MALJ,2CAAH,qDAenB,OACE,sBAAKpD,UAAU,MAAf,UACE,eAACqD,EAAA,EAAD,CAAOC,SANO,SAACC,GACjBA,EAAEC,iBACFd,EAASH,IAIqBkB,UAAU,OAAOzD,UAAWL,EAAQpB,KAAhE,UACE,cAACmF,EAAA,EAAD,CACEC,KAAK,OACLC,SAba,SAACL,GACpBN,QAAQC,IAAIK,EAAEM,OAAOC,OACrBtB,EAAUe,EAAEM,OAAOC,QAYbA,MAAOvB,EACPvC,UAAWL,EAAQoC,MACnBgC,YAAY,oBACZC,WAAY,CAAE,aAAc,wBAE9B,cAACrD,EAAA,EAAD,CACEgD,KAAK,SACL3D,UAAWL,EAAQuC,WACnBnB,aAAW,SAHb,SAIE,cAAC,IAAD,SAQJ,cAACkD,EAAA,EAAD,CAAMC,WAAS,EAAElC,QAAS,EAA1B,SACCK,EAAOf,KAAI,SAAC6C,GAAD,OACP,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACG,cAAC,EAAD,CAEAnE,MAAOiE,EAAOA,OAAOG,MACrBlE,SAAU+D,EAAOA,OAAO/D,SACxBG,MAAO4D,EAAOA,OAAO5D,MACrBc,YAAa8C,EAAOA,OAAO9C,aAJtB8C,EAAOA,OAAOG,kBCjFlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e0b66279.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\n//material ui\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\n\r\n\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\n\r\n//css\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 325,\r\n    margin:\"30px 5px\"\r\n   \r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nconst Recipe = (props) => {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardHeader title={props.title} subheader={\"Cal: \"+props.calories.toFixed(2)} />\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={props.image}\r\n          title={props.title}\r\n        />\r\n\r\n        <CardActions disableSpacing>\r\n          {/* <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton> */}\r\n          <Typography>Incredients</Typography>\r\n          <IconButton\r\n            className={clsx(classes.expand, {\r\n              [classes.expandOpen]: expanded,\r\n            })}\r\n            onClick={handleExpandClick}\r\n            aria-expanded={expanded}\r\n            aria-label=\"show more\">\r\n            <ExpandMoreIcon />\r\n          </IconButton>\r\n        </CardActions>\r\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            {props.ingredients.map((ind) => (\r\n              <Typography paragraph key={ind.weight}>\r\n                <li>{ind.text}</li>\r\n              </Typography>\r\n            ))}\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n\r\n      {/* \r\n            <h1>{props.title}</h1>\r\n            <p>{props.calories}</p>\r\n            <img src={props.image} alt=\"missing\"/>\r\n            <ul>\r\n                {props.ingredients.map( (ind) =>(<li key={ind.weight}>{ind.text}</li>))}\r\n            </ul> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Recipe from \"./Recipe\";\n\n// material ui\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\n\n//css\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 400,\n    margin: \"10px auto\",\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const api_Id = \"7a462a82\";\n  const api_Key = \"181f84823a18e7ed366f25874f0b82de\";\n\n  const [recepi, setRecepi] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  const [query, setQuery] = useState(\"banana\");\n\n  useEffect(() => {\n    getRecepiData();\n  }, [query]);\n\n  const getRecepiData = async () => {\n    const response = await axios.get(\n      `https://api.edamam.com/search?q=${query}&app_id=${api_Id}&app_key=${api_Key}&from=0&to=10&calories=591-722&health=alcohol-free`,\n    );\n    console.log(response.data.hits);\n    setRecepi(response.data.hits);\n  };\n  const updateSearch = (e) => {\n    console.log(e.target.value);\n    setSearch(e.target.value);\n  };\n  const postQuery = (e) => {\n    e.preventDefault();\n    setQuery(search);\n  };\n  return (\n    <div className=\"app\">\n      <Paper onSubmit={postQuery} component=\"form\" className={classes.root}>\n        <InputBase\n          type=\"text\"\n          onChange={updateSearch}\n          value={search}\n          className={classes.input}\n          placeholder=\"Search for Recipe\"\n          inputProps={{ \"aria-label\": \"search google maps\" }}\n        />\n        <IconButton\n          type=\"submit\"\n          className={classes.iconButton}\n          aria-label=\"search\">\n          <SearchIcon />\n        </IconButton>\n      </Paper>\n      {/* \n      <form onSubmit={postQuery}>\n        <input type=\"text\" onChange={updateSearch} value={search} />\n        <button type=\"submit\">Submit</button>\n      </form> */}\n      <Grid container  spacing={6}>\n      {recepi.map((recipe) => (\n           <Grid item xs={3}>  \n              <Recipe\n              key={recipe.recipe.label}\n              title={recipe.recipe.label}\n              calories={recipe.recipe.calories}\n              image={recipe.recipe.image}\n              ingredients={recipe.recipe.ingredients}></Recipe>\n           </Grid>\n          ))}\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}